@use "sass:map";
@use "../global" as g;

// マージン・パディング
$margin_names: (
  m: margin,
  mt: margin-top,
  mb: margin-bottom,
  ml: margin-left,
  mr: margin-right,
);

$padding_names: (
  p: padding,
  pt: padding-top,
  pb: padding-bottom,
  pl: padding-left,
  pr: padding-right,
);

@each $name_key, $name in map-merge($margin_names, $padding_names) {
  @each $space_key, $space in g.$spaces {
    // デバイスサイズの指定なし
    .#{$name_key}-#{$space_key} {
      @if $space_key == auto {
        #{$name}: #{$space} !important;
      } @else {
        #{$name}: #{$space}px !important;
      }
    }
    // デバイスサイズの指定あり
    @each $break_point_key, $break_point in g.$break_points {
      .#{$name_key}-#{$break_point_key}-#{$space_key} {
        @media screen and (min-width: #{$break_point}) {
          @if $space_key == auto {
            #{$name}: #{$space} !important;
          } @else {
            #{$name}: #{$space}px !important;
          }
        }
      }
    }
  }
}

// コンテナ
.container {
  position: relative;
  @include g.container();
  &.--single {
    @include g.Mq(md) {
      max-width: map.get(g.$width_containers, md);
    }
  }
}

// グリッド
$grid_gap: 12px;

.row {
  display: flex;
  flex-wrap: wrap;
  margin: calc($grid_gap / -2);
  & > [class^="col-"] {
    flex-shrink: 0;
    padding: calc($grid_gap / 2);
  }
}

@for $i from 1 through 12 {
  // デバイスサイズの指定なし
  .col-#{$i} {
    width: calc(100% / 12 * $i);
  }
  // デバイスサイズの指定あり
  @each $break_point_key, $break_point in g.$break_points {
    .col-#{$break_point_key}-#{$i} {
      width: 100%;
      @media screen and (min-width: #{$break_point}) {
        width: calc(100% / 12 * $i);
      }
    }
  }
}

// 画面固定
html.--window-fixed {
  overflow-y: scroll;
  & body {
    position: fixed;
    right: 0;
    left: 0;
  }
}

// テキスト
$align_names: left, right, center;

@each $align_name in $align_names {
  .text-#{$align_name} {
    text-align: #{$align_name} !important;
  }
  @each $break_point_key, $break_point in g.$break_points {
    .text-#{$break_point_key}-#{$align_name} {
      @media screen and (min-width: #{$break_point}) {
        text-align: #{$align_name} !important;
      }
    }
  }
}